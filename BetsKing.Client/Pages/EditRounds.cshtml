@page "/manage/editTournament/{Id}/editRounds"
@inherits BetsKing.Client.Pages.BasePage

<h1>Edycja turnieju: @tournament?.Name</h1>
<hr />
<h2>Rundy</h2>

<p>Wybierz rundę lub dodaj nową</p>

<div class="col-lg-4">
    <div class="form-group">
        <input class="form-control" type="text" bind="@addRoundModel.RoundName" />
    </div>
    <div class="form-group">
        <button class="btn btn-primary" onclick="@AddNew">Dodaj nową</button>
    </div>
</div>

<hr />

@if (@rounds != null)
{
<div class="list-group col-lg-3">
    @foreach (var round in rounds)
        {
    <a href="manage/editTournament/@tournament.Id/editRounds/@round.Id" class="list-group-item list-group-item-action">@round.Name</a>
        }
</div>
}


@functions {
    [Parameter]
    string Id { get; set; }

    TournamentViewModel tournament;
    List<RoundViewModel> rounds;

    AddRoundViewModel addRoundModel = new AddRoundViewModel();

    protected override async Task OnInitAsync()
    {
        int.TryParse(Id, out int id);

        tournament = await ApiClient.GetJsonAuthorizedAsync<TournamentViewModel>($"api/tournament/{id}");
        await GetAndSetRounds();
    }

    async Task AddNew()
    {
        if (!string.IsNullOrEmpty(addRoundModel.RoundName))
        {
            addRoundModel.TournamentId = tournament.Id;

            var roundId = await ApiClient.SendJsonAuthorizedAsync<int>(HttpMethod.Post, "api/round", addRoundModel);

            if (roundId > 0)
            {
                addRoundModel.RoundName = null;

                await GetAndSetRounds();
            }
        }
    }

    async Task GetAndSetRounds()
    {
        rounds = await ApiClient.GetJsonAuthorizedAsync<List<RoundViewModel>>($"api/round/GetByTournament/{tournament.Id}");
    }
}
