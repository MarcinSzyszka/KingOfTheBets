// <auto-generated />
using System;
using BetsKing.Server.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BetsKing.Server.Migrations
{
    [DbContext(typeof(BetsKingDbContext))]
    partial class BetsKingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BetsKing.Server.Data.Entity.Gambler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Gamblers");
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoundId");

                    b.Property<string>("TeamAName");

                    b.Property<int?>("TeamAScore");

                    b.Property<string>("TeamBName");

                    b.Property<int?>("TeamBScore");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.MatchBet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GamblerId");

                    b.Property<int>("MatchId");

                    b.Property<int?>("TeamAScore");

                    b.Property<int?>("TeamBScore");

                    b.HasKey("Id");

                    b.HasIndex("GamblerId");

                    b.HasIndex("MatchId");

                    b.ToTable("MatchBets");
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsArchive");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.TournamentGambler", b =>
                {
                    b.Property<int>("TournamentId");

                    b.Property<int>("GamblerId");

                    b.Property<bool>("IsActive");

                    b.HasKey("TournamentId", "GamblerId");

                    b.HasIndex("GamblerId");

                    b.ToTable("TournamentGamblers");
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.UserRole", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("GamblerId");

                    b.HasKey("RoleId", "GamblerId");

                    b.HasIndex("GamblerId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.Match", b =>
                {
                    b.HasOne("BetsKing.Server.Data.Entity.Round", "Round")
                        .WithMany("Matches")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.MatchBet", b =>
                {
                    b.HasOne("BetsKing.Server.Data.Entity.Gambler", "Gambler")
                        .WithMany("Bets")
                        .HasForeignKey("GamblerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BetsKing.Server.Data.Entity.Match", "Match")
                        .WithMany("Bets")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.Round", b =>
                {
                    b.HasOne("BetsKing.Server.Data.Entity.Tournament", "Tournament")
                        .WithMany("Rounds")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.TournamentGambler", b =>
                {
                    b.HasOne("BetsKing.Server.Data.Entity.Gambler", "Gambler")
                        .WithMany("Tournaments")
                        .HasForeignKey("GamblerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BetsKing.Server.Data.Entity.Tournament", "Tournament")
                        .WithMany("Gamblers")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BetsKing.Server.Data.Entity.UserRole", b =>
                {
                    b.HasOne("BetsKing.Server.Data.Entity.Gambler", "Gambler")
                        .WithMany("Roles")
                        .HasForeignKey("GamblerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BetsKing.Server.Data.Entity.Role", "Role")
                        .WithMany("Gamblers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
